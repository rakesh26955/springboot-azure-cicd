name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up JDK for Maven (if using Maven for Java build)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Step 3: Build the Java project using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: docker build -t my-java-app .

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-java-app:latest ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest

      # Step 7: Deploy to Azure Kubernetes Service (AKS)
      - name: Deploy to Azure Kubernetes Service (AKS)
        uses: azure/k8s-deploy@v1
        with:
          kubeconfig: ${{ secrets.AZURE_K8S_KUBECONFIG }}
          namespace: default
          manifests: |
            kubernetes/deployment.yml
            kubernetes/service.yml
