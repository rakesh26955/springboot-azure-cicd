name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up JDK for Maven (you can skip this if your build system is different)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Build the project using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t my-java-app .

      # Push the Docker image to Azure Container Registry (ACR)
      - name: Push Docker image to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_ACR_URL }}
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Tag and Push Docker image to ACR
        run: |
          docker tag my-java-app:latest ${{ secrets.AZURE_ACR_URL }}/my-java-app:latest
          docker push ${{ secrets.AZURE_ACR_URL }}/my-java-app:latest

      # Deploy to Azure Kubernetes Service (AKS) (Alternatively, use any other PaaS service)
      - name: Deploy to Azure Kubernetes Service
        uses: azure/k8s-deploy@v1
        with:
          kubeconfig: ${{ secrets.AZURE_K8S_KUBECONFIG }}
          namespace: default
          manifests: |
            kubernetes/deployment.yml
            kubernetes/service.yml
